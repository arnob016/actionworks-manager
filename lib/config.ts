import type { Task, TeamMember, Comment, Attachment } from "./types"
import { format, addDays, subDays } from "date-fns"

// Define color palettes for statuses and product areas
// Tailwind classes are used directly. Ensure these are available or adjust as needed.
// Using text-color and bg-color for better contrast control.
export const statusColors: Record<string, { background: string; text: string; border: string }> = {
  New: { background: "bg-sky-100 dark:bg-sky-900", text: "text-sky-700 dark:text-sky-300", border: "border-sky-500" },
  Backlog: {
    background: "bg-slate-100 dark:bg-slate-700",
    text: "text-slate-600 dark:text-slate-300",
    border: "border-slate-500",
  },
  "To Do": {
    background: "bg-blue-100 dark:bg-blue-900",
    text: "text-blue-700 dark:text-blue-300",
    border: "border-blue-500",
  },
  "In Progress": {
    background: "bg-amber-100 dark:bg-amber-900",
    text: "text-amber-700 dark:text-amber-300",
    border: "border-amber-500",
  },
  "In Review": {
    background: "bg-purple-100 dark:bg-purple-900",
    text: "text-purple-700 dark:text-purple-300",
    border: "border-purple-500",
  },
  Done: {
    background: "bg-green-100 dark:bg-green-900",
    text: "text-green-700 dark:text-green-300",
    border: "border-green-500",
  },
  Completed: {
    background: "bg-emerald-100 dark:bg-emerald-900",
    text: "text-emerald-700 dark:text-emerald-300",
    border: "border-emerald-500",
  },
  Default: {
    background: "bg-gray-100 dark:bg-gray-700",
    text: "text-gray-600 dark:text-gray-300",
    border: "border-gray-500",
  },
}

export const productAreaColors: Record<string, { background: string; text: string; border: string }> = {
  "Core Platform": {
    background: "bg-red-100 dark:bg-red-900",
    text: "text-red-700 dark:text-red-300",
    border: "border-red-500",
  },
  "User Interface": {
    background: "bg-orange-100 dark:bg-orange-900",
    text: "text-orange-700 dark:text-orange-300",
    border: "border-orange-500",
  },
  API: {
    background: "bg-yellow-100 dark:bg-yellow-900",
    text: "text-yellow-700 dark:text-yellow-300",
    border: "border-yellow-500",
  },
  "Mobile Initiative": {
    background: "bg-lime-100 dark:bg-lime-900",
    text: "text-lime-700 dark:text-lime-300",
    border: "border-lime-500",
  },
  "Data Analytics": {
    background: "bg-teal-100 dark:bg-teal-900",
    text: "text-teal-700 dark:text-teal-300",
    border: "border-teal-500",
  },
  Integrations: {
    background: "bg-cyan-100 dark:bg-cyan-900",
    text: "text-cyan-700 dark:text-cyan-300",
    border: "border-cyan-500",
  },
  Portal: {
    background: "bg-sky-100 dark:bg-sky-900",
    text: "text-sky-700 dark:text-sky-300",
    border: "border-sky-500",
  },
  Action: {
    background: "bg-indigo-100 dark:bg-indigo-900",
    text: "text-indigo-700 dark:text-indigo-300",
    border: "border-indigo-500",
  },
  BandTogether: {
    background: "bg-fuchsia-100 dark:bg-fuchsia-900",
    text: "text-fuchsia-700 dark:text-fuchsia-300",
    border: "border-fuchsia-500",
  },
  Default: {
    background: "bg-gray-100 dark:bg-gray-700",
    text: "text-gray-600 dark:text-gray-300",
    border: "border-gray-500",
  },
}

// Priority colors are already defined in staticConfig.priorities (bg-color format)
// We'll need a way to get border color from bg-color for priorities.
export const priorityBorderColors: Record<string, string> = {
  Highest: "border-red-500",
  High: "border-orange-500",
  Medium: "border-yellow-500",
  Low: "border-green-500",
  Default: "border-slate-400",
}

export const staticConfig = {
  statuses: ["New", "Backlog", "To Do", "In Progress", "In Review", "Done", "Completed"],
  priorities: {
    // These are background colors
    Highest: "bg-red-500",
    High: "bg-orange-500",
    Medium: "bg-yellow-500",
    Low: "bg-green-500",
  },
  productAreas: [
    "Core Platform",
    "User Interface",
    "API",
    "Mobile Initiative",
    "Data Analytics",
    "Integrations",
    "Portal",
    "Action",
    "BandTogether",
  ],
  effortSizes: ["XS", "S", "M", "L", "XL"],
  teamMembers: [
    { name: "Zonaid", color: "bg-blue-500" },
    { name: "Alice", color: "bg-pink-500" },
    { name: "Bob", color: "bg-indigo-500" },
    { name: "Charlie", color: "bg-purple-500" },
    { name: "Diana", color: "bg-teal-500" },
    { name: "Eve", color: "bg-lime-500" },
    { name: "Foysal", color: "bg-sky-500" },
    { name: "Grace", color: "bg-rose-500" },
    { name: "Henry", color: "bg-amber-500" },
    { name: "Ivy", color: "bg-cyan-500" },
    { name: "Jack", color: "bg-emerald-500" },
    { name: "Sarah Chen", color: "bg-fuchsia-500" },
    { name: "Mike Johnson", color: "bg-green-600" },
    { name: "Lisa Wang", color: "bg-pink-600" },
    { name: "Mike Lee", color: "bg-violet-500" },
    { name: "Laura Palmer", color: "bg-red-400" },
  ] as TeamMember[],
  viewsEnabled: ["calendar", "kanban", "table", "timeline"],
}

const today = new Date()
const june2025Tasks: Partial<Task>[] = [
  {
    id: "jt-1",
    title: "Q3 Planning Kickoff",
    description: "Initial meeting to discuss Q3 roadmap and priorities.",
    status: "To Do",
    priority: "Highest",
    assignees: ["Zonaid", "Alice"],
    startDate: format(addDays(today, 1), "yyyy-MM-dd"),
    dueDate: format(addDays(today, 2), "yyyy-MM-dd"),
    effort: "S",
    productArea: "Core Platform",
    reporter: "Bob",
    tags: ["planning", "strategic"],
    comments: [
      {
        id: "c1",
        author: "Alice",
        content: "Looking forward to this!",
        createdAt: subDays(today, 1).toISOString(),
        parentId: undefined,
      },
    ],
    isPrivate: false,
  },
  {
    id: "jt-2",
    title: "User Research Analysis - Phase 1",
    description: "Analyze findings from the first phase of user research.",
    status: "In Progress",
    priority: "High",
    assignees: ["Charlie", "Diana"],
    startDate: format(subDays(today, 5), "yyyy-MM-dd"),
    dueDate: format(addDays(today, 5), "yyyy-MM-dd"),
    effort: "L",
    productArea: "User Interface",
    reporter: "Eve",
    attachments: [
      {
        id: "a1",
        fileName: "research_summary_p1.pdf",
        url: "/placeholder.svg?width=100&height=100",
        fileType: "application/pdf",
        uploadedAt: subDays(today, 1).toISOString(),
      },
    ],
    isPrivate: false,
  },
  {
    id: "jt-parent-mobile",
    title: "Mobile App Development Initiative",
    description: "Parent task for all mobile app development efforts for Q3.",
    status: "Backlog",
    priority: "High",
    assignees: ["Foysal", "Grace"],
    startDate: format(addDays(today, 7), "yyyy-MM-dd"),
    dueDate: format(addDays(today, 60), "yyyy-MM-dd"),
    effort: "XL",
    productArea: "Mobile Initiative",
    reporter: "Zonaid",
    tags: ["epic", "mobile"],
    isPrivate: false,
  },
  {
    id: "jt-4",
    parentId: "jt-parent-mobile",
    title: "Mobile UI Kit Update",
    description: "Update the mobile UI kit with new components and styles.",
    status: "To Do",
    priority: "Medium",
    assignees: ["Henry"],
    startDate: format(addDays(today, 10), "yyyy-MM-dd"),
    dueDate: format(addDays(today, 20), "yyyy-MM-dd"),
    effort: "M",
    productArea: "Mobile Initiative",
    reporter: "Foysal",
    tags: ["design", "ui-kit"],
    dependsOn: [],
    isPrivate: false,
  },
  {
    id: "jt-5",
    title: "Documentation Review - SDK",
    description: "Review and update SDK documentation for new features.",
    status: "In Review",
    priority: "Medium",
    assignees: ["Ivy", "Jack"],
    startDate: format(addDays(today, 3), "yyyy-MM-dd"),
    dueDate: format(addDays(today, 10), "yyyy-MM-dd"),
    effort: "M",
    productArea: "API",
    reporter: "Alice",
    isPrivate: true,
    tags: ["docs", "sdk", "private"],
  },
  {
    id: "jt-6",
    title: "Performance Optimization - Core API",
    description: "Identify and address performance bottlenecks in the core API.",
    status: "In Progress",
    priority: "Highest",
    assignees: ["Bob", "Sarah Chen"],
    startDate: format(subDays(today, 2), "yyyy-MM-dd"),
    dueDate: format(addDays(today, 12), "yyyy-MM-dd"),
    effort: "L",
    productArea: "Core Platform",
    reporter: "Zonaid",
    dependsOn: ["jt-2"],
    tags: ["performance", "backend"],
  },
  {
    id: "jt-7",
    title: "New Integration Design - Salesforce",
    description: "Design the architecture for Salesforce integration.",
    status: "Backlog",
    priority: "High",
    assignees: ["Mike Lee"],
    startDate: format(addDays(today, 15), "yyyy-MM-dd"),
    dueDate: format(addDays(today, 30), "yyyy-MM-dd"),
    effort: "M",
    productArea: "Integrations",
    reporter: "Diana",
    tags: ["integration", "salesforce"],
    comments: [
      {
        id: "c2",
        author: "Mike Lee",
        content: "Drafting initial specs.",
        createdAt: new Date().toISOString(),
        parentId: undefined,
      },
    ],
  },
  {
    id: "jt-8",
    title: "Data Migration Strategy",
    description: "Develop a strategy for migrating legacy data to the new system.",
    status: "To Do",
    priority: "High",
    assignees: ["Laura Palmer", "Henry"],
    startDate: format(addDays(today, 5), "yyyy-MM-dd"),
    dueDate: format(addDays(today, 25), "yyyy-MM-dd"),
    effort: "L",
    productArea: "Data Analytics",
    reporter: "Bob",
    tags: ["data", "migration"],
  },
  {
    id: "jt-9",
    title: "Security Audit - Q3",
    description: "Conduct a comprehensive security audit of the platform.",
    status: "To Do",
    priority: "Highest",
    assignees: ["Eve", "Jack"],
    startDate: format(addDays(today, 20), "yyyy-MM-dd"),
    dueDate: format(addDays(today, 40), "yyyy-MM-dd"),
    effort: "XL",
    productArea: "Core Platform",
    reporter: "Zonaid",
    isPrivate: true,
    tags: ["security", "audit", "private"],
  },
  {
    id: "jt-10",
    title: "Onboarding Flow Redesign",
    description: "Redesign the user onboarding flow for better UX.",
    status: "In Progress",
    priority: "Medium",
    assignees: ["Charlie", "Grace"],
    startDate: format(subDays(today, 7), "yyyy-MM-dd"),
    dueDate: format(addDays(today, 7), "yyyy-MM-dd"),
    effort: "M",
    productArea: "User Interface",
    reporter: "Diana",
    attachments: [
      {
        id: "a2",
        fileName: "onboarding_mockups_v1.fig",
        url: "/placeholder.svg?width=100&height=100",
        fileType: "figma",
        uploadedAt: subDays(today, 2).toISOString(),
      },
    ],
  },
  {
    id: "jt-11",
    title: "API Rate Limiting Implementation",
    description: "Implement rate limiting for public API endpoints.",
    status: "Done",
    priority: "High",
    assignees: ["Bob"],
    startDate: format(subDays(today, 20), "yyyy-MM-dd"),
    dueDate: format(subDays(today, 10), "yyyy-MM-dd"),
    effort: "M",
    productArea: "API",
    reporter: "Alice",
    tags: ["api", "security"],
  },
  {
    id: "jt-12",
    title: "Mobile App Beta Testing Setup",
    parentId: "jt-parent-mobile",
    description: "Set up infrastructure and process for mobile app beta testing.",
    status: "To Do",
    priority: "High",
    assignees: ["Foysal", "Henry"],
    startDate: format(addDays(today, 25), "yyyy-MM-dd"),
    dueDate: format(addDays(today, 35), "yyyy-MM-dd"),
    effort: "M",
    productArea: "Mobile Initiative",
    reporter: "Grace",
    dependsOn: ["jt-4"],
  },
  {
    id: "jt-13",
    title: "Customer Feedback Portal - Specs",
    description: "Define specifications for a new customer feedback portal.",
    status: "Backlog",
    priority: "Medium",
    assignees: ["Diana", "Ivy"],
    startDate: format(addDays(today, 30), "yyyy-MM-dd"),
    dueDate: format(addDays(today, 45), "yyyy-MM-dd"),
    effort: "S",
    productArea: "User Interface",
    reporter: "Charlie",
  },
  {
    id: "jt-14",
    title: "Analytics Dashboard V2 Development",
    description: "Develop the second version of the analytics dashboard.",
    status: "In Progress",
    priority: "High",
    assignees: ["Laura Palmer", "Sarah Chen"],
    startDate: format(subDays(today, 10), "yyyy-MM-dd"),
    dueDate: format(addDays(today, 20), "yyyy-MM-dd"),
    effort: "XL",
    productArea: "Data Analytics",
    reporter: "Bob",
    comments: [
      {
        id: "c3",
        author: "Laura Palmer",
        content: "Frontend structure complete.",
        createdAt: subDays(today, 1).toISOString(),
        parentId: undefined,
      },
    ],
  },
  {
    id: "jt-15",
    title: "Competitor Analysis Report",
    description: "Compile a report on key competitors and their offerings.",
    status: "Completed",
    priority: "Low",
    assignees: ["Eve"],
    startDate: format(subDays(today, 30), "yyyy-MM-dd"),
    dueDate: format(subDays(today, 15), "yyyy-MM-dd"),
    effort: "M",
    productArea: "Core Platform",
    reporter: "Zonaid",
    attachments: [
      {
        id: "a3",
        fileName: "competitor_analysis.docx",
        url: "/placeholder.svg?width=100&height=100",
        fileType: "doc",
        uploadedAt: subDays(today, 16).toISOString(),
      },
    ],
  },
  {
    id: "jt-16",
    title: "Refactor Legacy Auth Module",
    description: "Refactor the old authentication module to improve security and maintainability.",
    status: "To Do",
    priority: "Highest",
    assignees: ["Bob", "Jack"],
    startDate: format(addDays(today, 7), "yyyy-MM-dd"),
    dueDate: format(addDays(today, 28), "yyyy-MM-dd"),
    effort: "L",
    productArea: "Core Platform",
    reporter: "Alice",
    tags: ["tech-debt", "security"],
    dependsOn: ["jt-9"],
  },
  {
    id: "jt-17",
    title: "Marketing Campaign Launch - New Feature",
    description: "Plan and execute marketing campaign for the upcoming new feature.",
    status: "In Progress",
    priority: "High",
    assignees: ["Grace", "Mike Lee"],
    startDate: format(addDays(today, 1), "yyyy-MM-dd"),
    dueDate: format(addDays(today, 21), "yyyy-MM-dd"),
    effort: "L",
    productArea: "Integrations",
    reporter: "Foysal",
    tags: ["marketing", "launch"],
  },
  {
    id: "jt-18",
    title: "UI Style Guide Finalization",
    description: "Finalize and publish the company-wide UI style guide.",
    status: "In Review",
    priority: "Medium",
    assignees: ["Charlie", "Henry"],
    startDate: format(subDays(today, 5), "yyyy-MM-dd"),
    dueDate: format(addDays(today, 5), "yyyy-MM-dd"),
    effort: "M",
    productArea: "User Interface",
    reporter: "Diana",
  },
  {
    id: "jt-19",
    title: "Server Infrastructure Upgrade",
    description: "Upgrade server infrastructure for better scalability and reliability.",
    status: "To Do",
    priority: "Highest",
    assignees: ["Sarah Chen", "Laura Palmer"],
    startDate: format(addDays(today, 10), "yyyy-MM-dd"),
    dueDate: format(addDays(today, 40), "yyyy-MM-dd"),
    effort: "XL",
    productArea: "Core Platform",
    reporter: "Bob",
    isPrivate: false,
  },
  {
    id: "jt-20",
    title: "Foysal's Private Research Notes",
    description: "Confidential research notes for an upcoming project.",
    status: "Backlog",
    priority: "Medium",
    assignees: ["Foysal"],
    startDate: format(addDays(today, 1), "yyyy-MM-dd"),
    dueDate: format(addDays(today, 30), "yyyy-MM-dd"),
    effort: "S",
    productArea: "Mobile Initiative",
    reporter: "Foysal",
    isPrivate: true,
    tags: ["research", "confidential", "private"],
  },
]

const mapToFullTask = (task: Partial<Task>, index: number): Task => {
  const reporterName = staticConfig.teamMembers[index % staticConfig.teamMembers.length]?.name || "System"
  return {
    id: task.id || `task-fallback-${Date.now()}-${index}`,
    title: task.title || "Untitled Task",
    description: task.description || "",
    status: task.status || staticConfig.statuses[0],
    priority: task.priority || Object.keys(staticConfig.priorities)[2],
    assignees: task.assignees || [],
    startDate: task.startDate || format(today, "yyyy-MM-dd"),
    dueDate: task.dueDate || format(addDays(today, 7), "yyyy-MM-dd"),
    effort: task.effort || staticConfig.effortSizes[2],
    productArea: task.productArea || staticConfig.productAreas[0],
    order: task.order ?? index,
    dependsOn: task.dependsOn || [],
    reporter: task.reporter || reporterName,
    tags: task.tags || [],
    attachments:
      (task.attachments as Attachment[])?.map((att) => ({
        id: att.id || `att-${Date.now()}`,
        fileName: att.fileName || "unknown.file",
        url: att.url || "#",
        fileType: att.fileType || "unknown",
        uploadedAt: att.uploadedAt || new Date().toISOString(),
      })) || [],
    comments:
      (task.comments as Comment[])?.map((cmt) => ({
        id: cmt.id || `cmt-${Date.now()}`,
        author: cmt.author || "Unknown User",
        content: cmt.content || "",
        createdAt: cmt.createdAt || new Date().toISOString(),
        parentId: cmt.parentId,
      })) || [],
    isPrivate: task.isPrivate || false,
    parentId: task.parentId,
  }
}

const originalSampleTasks: Partial<Task>[] = [
  {
    id: "1",
    title: "Implement user authentication system",
    description: "Build secure login/logout functionality with JWT tokens and password hashing",
    status: "In Development",
    priority: "Highest",
    assignees: ["Zonaid", "Foysal"],
    startDate: "2024-01-05",
    dueDate: "2024-01-15",
    effort: "L",
    productArea: "Portal",
    order: 0,
    reporter: "Sarah Chen",
    tags: ["auth", "security"],
    attachments: [
      {
        id: "att-1",
        fileName: "Auth-Flow-Diagram.png",
        url: "#",
        fileType: "image/png",
        uploadedAt: "2024-01-04T10:00:00Z",
      },
    ],
    comments: [
      {
        id: "cmt-1",
        author: "Foysal",
        content: "Starting work on the JWT strategy.",
        createdAt: "2024-01-05T11:00:00Z",
      },
      {
        id: "cmt-2",
        author: "Sarah Chen",
        content: "Make sure to include refresh tokens.",
        createdAt: "2024-01-05T12:30:00Z",
        parentId: "cmt-1",
      },
    ],
  },
  {
    id: "2",
    title: "Design mobile-responsive dashboard",
    status: "Planned",
    priority: "High",
    assignees: ["Sarah Chen"],
    startDate: "2024-01-10",
    dueDate: "2024-01-20",
    productArea: "Portal",
  },
]

// Ensure sampleTasks is an empty array for a clean slate.
export const sampleTasks: Task[] = []
